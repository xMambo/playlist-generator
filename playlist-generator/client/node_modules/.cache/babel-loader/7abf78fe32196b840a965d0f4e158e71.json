{"ast":null,"code":"import _toConsumableArray from \"/Users/kevinmiller/VBC/homework/playlist-generator/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kevinmiller/VBC/homework/playlist-generator/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinmiller/VBC/homework/playlist-generator/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinmiller/VBC/homework/playlist-generator/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinmiller/VBC/homework/playlist-generator/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinmiller/VBC/homework/playlist-generator/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kevinmiller/VBC/homework/playlist-generator/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport FetchBands from \"./components/FetchBands\";\nimport Input from \"./components/Input\";\nimport Location from \"./components/Location\";\nimport NewFetch from \"./components/pages/NewFetch\";\nimport uuid from 'uuid';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      location: [{\n        cityState: 'nashville,tennessee',\n        items: []\n      }]\n    };\n\n    _this.fetchAPI = function (place) {\n      console.log(\"fetch:\", _this.state.location[0].cityState);\n      var APIKey = \"166a433c57516f51dfab1f7edaed8413\";\n      var BASEURL = \"https://api.openweathermap.org/data/2.5/weather?q=\";\n      var UNITS = \"&units=imperial&appid=\";\n      var url = BASEURL + _this.state.location[0].cityState + UNITS + APIKey;\n      fetch(url).then(function (res) {\n        return res.json();\n      }) // eslint-disable-next-line\n      .then(function (data) {\n        _this.setState({\n          isLoaded: true,\n          items: data\n        });\n\n        console.log(\"fetch url data:\", data);\n      });\n    };\n\n    _this.addInput = function (title) {\n      var newInput = {\n        id: uuid.v4(),\n        cityState: title,\n        addCity: function addCity(city) {\n          this.location.push(city);\n        }\n      };\n\n      _this.setState({\n        location: [].concat(_toConsumableArray(_this.state.location), [newInput])\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isLoaded = this.state.isLoaded;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          render: function render(props) {\n            return React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              type: \"button\",\n              onClick: _this2.onClearArray,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, \"Clear Array\"), React.createElement(\"ul\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, _this2.state.items.name), React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, _this2.state.items.coord.lat), React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }, _this2.state.items.coord.lon)), React.createElement(\"div\", {\n              className: \"fetchBands\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, React.createElement(FetchBands, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: \"inputField\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, React.createElement(Input, {\n              addInput: _this2.addInput,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, React.createElement(Location, {\n              location: _this2.state.location,\n              switchState: _this2.switchState,\n              handleChange: _this2.handleChange,\n              handleSubmit: _this2.handleSubmit,\n              value: _this2.state.value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }))));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/newfetch\",\n          component: NewFetch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"inputField\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })));\n      }\n\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinmiller/VBC/homework/playlist-generator/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","FetchBands","Input","Location","NewFetch","uuid","App","state","location","cityState","items","fetchAPI","place","console","log","APIKey","BASEURL","UNITS","url","fetch","then","res","json","data","setState","isLoaded","addInput","title","newInput","id","v4","addCity","city","push","props","onClearArray","name","coord","lat","lon","switchState","handleChange","handleSubmit","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport FetchBands from \"./components/FetchBands\";\nimport Input from \"./components/Input\";\nimport Location from \"./components/Location\";\nimport NewFetch from \"./components/pages/NewFetch\"\nimport uuid from 'uuid'\n\nclass App extends Component {\n  state = {\n    location: [\n      {\n        cityState: 'nashville,tennessee',\n        items: [],\n      }\n    ]\n  }\n\n\nfetchAPI = (place) => {\n\n      console.log(\"fetch:\", this.state.location[0].cityState)\n      const APIKey = \"166a433c57516f51dfab1f7edaed8413\";\n      const BASEURL = \"https://api.openweathermap.org/data/2.5/weather?q=\";\n      const UNITS = \"&units=imperial&appid=\"\n  \n      let url = BASEURL+this.state.location[0].cityState+UNITS+APIKey;\n     fetch(url)\n     .then(res => res.json())\n     // eslint-disable-next-line\n     .then(data => {\n         this.setState({\n             isLoaded: true,\n             items: data,\n         })\n         console.log(\"fetch url data:\", data);\n     });\n    }\n  \n// Add Input\n    addInput = (title) => {\n      const newInput = {\n        id: uuid.v4(),\n        cityState: title,\n        addCity: function(city) {\n          this.location.push(city)\n        }\n      }\n    this.setState({ location: [...this.state.location, newInput] });\n    \n    }\n  fetch\n  \n    render() {\n  \n      var { isLoaded } = this.state;\n      if (!isLoaded) {\n          return <div>Loading...</div>\n      }\n      else {\n          return (\n            <Router>\n              <div className=\"App\">\n              <Route exact path=\"/\" render={props => (\n                <React.Fragment>\n                <div className=\"container\">\n                <button type=\"button\" onClick={this.onClearArray}>\n          Clear Array\n        </button>\n                    <ul>\n                      <li>\n                          {this.state.items.name}\n                        </li>\n                      <li>\n                          {this.state.items.coord.lat}\n                      </li>\n                        <li>\n                            {this.state.items.coord.lon}\n                        </li>\n                    </ul>\n\n                      <div className=\"fetchBands\">\n                        <FetchBands />\n                      </div>\n                      <div className=\"inputField\">\n                        <Input addInput={this.addInput} />\n                      </div>\n                      <div>\n                      <Location location={this.state.location} switchState={this.switchState} handleChange={this.handleChange} handleSubmit={this.handleSubmit} value={this.state.value}/>\n                      </div>\n                    </div>\n                    </React.Fragment>\n              )} />\n              <Route path=\"/newfetch\" component={NewFetch} />\n              <div className=\"inputField\">\n                        \n                      </div>\n                  </div>\n            </Router>\n          );\n      };\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}