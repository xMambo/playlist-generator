{"map":"{\"version\":3,\"sources\":[\"/Users/kevinmiller/VBC/homework/playlist-generator/client/src/components/FetchLatLon.js\",\"/Users/kevinmiller/VBC/homework/playlist-generator/client/src/App.js\",\"/Users/kevinmiller/VBC/homework/playlist-generator/client/src/registerServiceWorker.js\",\"/Users/kevinmiller/VBC/homework/playlist-generator/client/src/index.js\"],\"names\":[\"FetchLatLon\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"items\",\"isLoaded\",\"_this2\",\"fetch\",\"BASEURL\",\"then\",\"res\",\"json\",\"data\",\"setState\",\"console\",\"log\",\"react_default\",\"a\",\"createElement\",\"className\",\"coord\",\"lat\",\"lon\",\"Component\",\"App\",\"visible\",\"components_FetchLatLon\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"response\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"yNA2DeA,qBAtDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,GACPC,UAAU,GAJCT,mFAWH,IAAAU,EAAAP,KAOjBQ,MAFaC,+HAGZC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEhBF,KAAK,SAAAG,GACFN,EAAKO,SAAS,CACVR,UAAU,EACVD,MAAOQ,IAEXE,QAAQC,IAAIH,sCAQf,OADmBb,KAAKI,MAAlBE,SAMEW,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAA,KACQF,EAAAC,EAAAC,cAAA,KAAA,KACKnB,KAAKI,MAAMC,MAAMgB,MAAMC,KAE5BL,EAAAC,EAAAC,cAAA,KAAA,KACKnB,KAAKI,MAAMC,MAAMgB,MAAME,OAVrCN,EAAAC,EAAAC,cAAA,MAAA,KAAA,qBArCWK,EAAAA,YCmBXC,6MAbbrB,MAAQ,CACNsB,SAAS,2EAIT,OACET,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACQ,EAAD,cARUH,EAAAA,WCEZI,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTzB,KAAK,SAAA6B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrC,QACfgC,UAAUC,cAAcO,WAK1B7B,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB6B,MAAM,SAAAC,GACL/B,QAAQ+B,MAAM,4CAA6CA,KChEjEC,EAAAA,EAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwBvB,OAAOC,UAC3CuB,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAqB,OAAMH,GAAN,sBAENzB,EAwCX,SAAiCO,GAE/B3B,MAAM2B,GACHzB,KAAK,SAAA+C,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMpD,KAAK,SAAA6B,GACjCA,EAAawB,aAAarD,KAAK,WAC7BoB,OAAOC,SAASiC,aAKpB9B,EAAgBC,KAGnBU,MAAM,WACL9B,QAAQC,IACN,mEAzDAiD,CAAwB9B,GAHxBD,EAAgBC,MC7BxB+B\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\";\\n\\n\\nclass FetchLatLon extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            items: [],\\n            isLoaded: false,\\n        }\\n    }\\n\\n\\n//https://api.openweathermap.org/data/2.5/weather?q=nashville,tennessee&units=imperial&appid=166a433c57516f51dfab1f7edaed8413\\n\\ncomponentDidMount() {\\n    const APIKey = \\\"166a433c57516f51dfab1f7edaed8413\\\";\\n    const BASEURL = \\\"https://api.openweathermap.org/data/2.5/weather?q=\\\";\\n    let location = \\\"nashville,tennessee\\\";\\n    const UNITS = \\\"&units=imperial&appid=\\\"\\n    const url = BASEURL+location+UNITS+APIKey;\\n\\n   fetch(url)\\n   .then(res => res.json())\\n   // eslint-disable-next-line\\n   .then(data => {\\n       this.setState({\\n           isLoaded: true,\\n           items: data,\\n       })\\n       console.log(data);\\n   });\\n\\n  }\\n\\n\\nrender() {\\n    var { isLoaded } = this.state;\\n    if (!isLoaded) {\\n        return <div>Loading...</div>\\n    }\\n    else {\\n        return (\\n            <div className=\\\"fetchLatLon\\\">\\n                <ul>\\n                        <li>\\n                            {this.state.items.coord.lat}\\n                        </li>\\n                        <li>\\n                            {this.state.items.coord.lon}\\n                        </li>\\n                </ul>\\n            </div>\\n        );\\n    };\\n}\\n}\\n\\nexport default FetchLatLon;\",\"\\nimport React, { Component } from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport FetchLatLon from \\\"./components/FetchLatLon\\\";\\n\\n\\n\\n\\nclass App extends Component {\\n  state = {\\n    visible: true\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <FetchLatLon />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === \\\"localhost\\\" ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === \\\"[::1]\\\" ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === \\\"production\\\" && \\\"serviceWorker\\\" in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener(\\\"load\\\", () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (!isLocalhost) {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      } else {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === \\\"installed\\\") {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log(\\\"New content is available; please refresh.\\\");\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log(\\\"Content is cached for offline use.\\\");\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error(\\\"Error during service worker registration:\\\", error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get(\\\"content-type\\\").indexOf(\\\"javascript\\\") === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        \\\"No internet connection found. App is running in offline mode.\\\"\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if (\\\"serviceWorker\\\" in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport registerServiceWorker from './registerServiceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nregisterServiceWorker();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,n,t){},15:function(e,n,t){},16:function(e,n,t){\"use strict\";t.r(n);var o=t(0),a=t.n(o),i=t(7),r=t.n(i),c=(t(14),t(1)),s=t(2),l=t(4),u=t(3),d=t(5),f=(t(15),function(e){function n(e){var t;return Object(c.a)(this,n),(t=Object(l.a)(this,Object(u.a)(n).call(this,e))).state={items:[],isLoaded:!1},t}return Object(d.a)(n,e),Object(s.a)(n,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://api.openweathermap.org/data/2.5/weather?q=nashville,tennessee&units=imperial&appid=166a433c57516f51dfab1f7edaed8413\").then(function(e){return e.json()}).then(function(n){e.setState({isLoaded:!0,items:n}),console.log(n)})}},{key:\"render\",value:function(){return this.state.isLoaded?a.a.createElement(\"div\",{className:\"fetchLatLon\"},a.a.createElement(\"ul\",null,a.a.createElement(\"li\",null,this.state.items.coord.lat),a.a.createElement(\"li\",null,this.state.items.coord.lon))):a.a.createElement(\"div\",null,\"Loading...\")}}]),n}(o.Component)),h=function(e){function n(){var e,t;Object(c.a)(this,n);for(var o=arguments.length,a=new Array(o),i=0;i<o;i++)a[i]=arguments[i];return(t=Object(l.a)(this,(e=Object(u.a)(n)).call.apply(e,[this].concat(a)))).state={visible:!0},t}return Object(d.a)(n,e),Object(s.a)(n,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"App\"},a.a.createElement(f,null))}}]),n}(o.Component),v=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function w(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}r.a.render(a.a.createElement(h,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");v?function(e){fetch(e).then(function(n){404===n.status||-1===n.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):w(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e):w(e)})}}()},8:function(e,n,t){e.exports=t(16)}},[[8,1,2]]]);","extractedComments":[]}